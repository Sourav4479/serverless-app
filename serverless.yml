org: ganguly7002665167
app: serverless
service: serverless
frameworkVersion: '2'
plugins:
  - serverless-offline
  - serverless-plugin-typescript
provider:
  name: aws
  runtime: nodejs12.x
  region: ap-south-1
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}-v2
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
functions:
  create:
    handler: todos/create.create
    events:
      - httpApi:
          path: /todos
          method: post

  get:
    handler: todos/get.get
    events:
      - httpApi:
          path: /todos/{id}
          method: get
  list:
    handler: todos/list.list
    events:
      - httpApi:
          path: /todos
          method: get

  update:
    handler: todos/update.update
    events:
      - httpApi:
          path: /todos
          method: put

resources:
  Resources:
    TodoApp:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
